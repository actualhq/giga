#!/usr/bin/env python3

import os
import argparse
import json

from giga.utils.logging import LOGGER
from giga.schemas.conf.country import CountryDefaultsRegistration
from giga.app.config import get_registered_countries
from giga.utils.globals import COUNTRY_DEFAULT_WORKSPACE
from giga.utils.logging import LOGGER


def main():
    parser = argparse.ArgumentParser()
    required = parser.add_argument_group("required arguments")
    required.add_argument("--country-parameters", "-c", required=True, help="Path to country defaults json file")
    args = parser.parse_args()

    # load + validate country defaults
    with open(args.country_parameters) as f:
        defaults_json = json.load(f)
    defaults = CountryDefaultsRegistration.as_validator(defaults_json)

    # ensure that the country being registered doesn't already exist
    country_name = defaults.data.country
    LOGGER.info(f"Registering country: {country_name} from {args.country_parameters}")

    existing_countries = get_registered_countries(COUNTRY_DEFAULT_WORKSPACE)
    if country_name in existing_countries:
        LOGGER.warning(f"Country {country_name} already exists")
        return

    # write the country defaults and complete registration
    with open(os.path.join(COUNTRY_DEFAULT_WORKSPACE, f"{country_name}.json"), "w") as f:
        json.dump(defaults_json, f, indent=4)


if __name__ == "__main__":
    main()
